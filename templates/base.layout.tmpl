{{define "base"}}
    <!doctype html>
    <html lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <title>My Nice Page</title>

        <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" 
            integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous"> -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" 
            integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
        <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" 
            integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"> -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">

    </head>

    <body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
        <li class="nav-item active">
            <a class="nav-link" href="/">Home</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/about">About</a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Rooms
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
            <a class="dropdown-item" href="/generals-quarters">General's Quarters</a>
            <a class="dropdown-item" href="/majors-suite">Major's Suite</a>
            </div>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/search-availability" tabindex="-1" aria-disabled="true">Book Now</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contact</a>
        </li>
        
        </ul>
    </div>
    </nav>

    {{block "content" .}}

    {{end}}


  <footer class="my-footer">
    <div class="row">
        <div class="col">
            Left
        </div>
  
        <div class="col">
            Center
        </div>
  
        <div class="col">
            Right
        </div>
    </div>
  </footer>
  
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" 
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" 
      crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js" 
      integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns" 
      crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/js/datepicker-full.min.js"></script>
  <script src="https://unpkg.com/notie"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  
    {{block "js" .}}

    {{end}}

  <script>
    // console.log("I am printing from javascript");
    let attention = Prompt();
  
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function() {
      'use strict';
      window.addEventListener('load', function() {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        let forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        let validation = Array.prototype.filter.call(forms, function(form) {
          form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      }, false);
    })();
  
    // document.getElementById("colorButton").addEventListener("click", function() {
    //   // enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
    //   // notify("success", "This is my message")
    //   // notifyModal("title", "<em>Hellow, World</em>", "error", "Cool")
    //   // attention.toast({msg:"Hello, World", icon:"error",});
    //   // attention.error({msg:"Hello, World"});
    //   let html = `
    //     <form id="check-availability-form" action="" method="post" novalidate class="needs-vaildation">
    //       <div class="form-row">
    //         <div class="col">
    //           <div class="form-row" id="reservation-dates-modal">
    //             <div class="col">
    //               <input disabled required class="form-control" type="text" name="start" id ="start" placeholder="Arrival">
    //             </div>
    //             <div class="col">
    //               <input disabled required class="form-control" type="text" name="end" id ="end" placeholder="Departure">
    //             </div>
    //           </div>
    //         </div>
    //       </div>
    //     </form>
    //   `
    //   attention.custom({msg:html, title:"Choose your dates"});
  
    // })
  
    // const elem = document.getElementById('reservation-dates');
    // const rangepicker = new DateRangePicker(elem, {
    //   format: "yyyy-mm-dd",
    // });
  
    function notify(msgType, msg) {
      notie.alert({
      type: msgType, //Number|String, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
      text: msg
      // stay: Boolean, // optional, default = false
      // time: Number, // optional, default = 3, minimum = 1,
      // position: String // optional, default = 'top', enum: ['top', 'bottom']
      })
    }
  
    function notifyModal(title, text, icon, confirmButtonText) {
      Swal.fire({
        title: title,
        html: text,
        icon: icon,
        confirmButtonText: confirmButtonText
      })
    }
  
    function Prompt() {
      let toast = function(c) {
        const {
          msg = "",
          icon = "success",
          position = "top-end",
        } = c;
  
        const Toast = Swal.mixin({
          toast: true,
          title: msg,
          position: position,
          icon: icon,
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
          didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
          }
        })
  
        Toast.fire({})      
      }
  
      let success = function(c) {
        const {
          msg = "",
          title = "",
          footer = "",
        } = c;
  
        Swal.fire({
          icon: 'success',
          title: title,
          text: msg,
          footer: footer,
        })
      }
  
      let error = function(c) {
        const {
          msg = "",
          title = "",
          footer = "",
        } = c;
  
        Swal.fire({
          icon: 'error',
          title: title,
          text: msg,
          footer: footer,
        })
      }
  
      async function custom(c) {
        const {
          msg = "",
          title = "",
        } = c;
  
        const { value: result } = await Swal.fire({
          title: title,
          html: msg,
          backdrop: false,
          focusConfirm: false,
          showCancelButton: true,
          willOpen: () => { //datepicker 기능 추가
            // const elem = document.getElementById('reservation-dates-modal');
            // const rangepicker = new DateRangePicker(elem, {
            //   format: "yyyy-mm-dd",
            //   showOnFocus: true,
            // });
            if (c.willOpen !== undefined) {
              c.willOpen();
            }
          },
          preConfirm: () => {
            return [
              document.getElementById('start').value,
              document.getElementById('end').value
            ]
          },
          didOpen: () => { // datepicker 모달창이 보일때 달력 나오지 않게 처리후 입력가능하게 다시 변경
            // document.getElementById("start").removeAttribute("disabled");
            // document.getElementById("end").removeAttribute("disabled");
            if(c.didOpen !== undefined){
              c.didOpen();
            }
          },
        })
  
        if (result) {
          // Swal.fire(JSON.stringify(formValues))
          if (result.dismiss !== Swal.DismissReason.cancel) {
            if(result.value !== ""){
              if (c.callback !== undefined){
                c.callback(result);
              }
            } else {
              c.callback(false);
            }
          } else {
            c.callback(false);
          }
        }
  
      }
  
      return {
        toast: toast,
        success: success,
        error: error,
        custom: custom,
      }
    }
  
  </script>
  </body>
  
  </html>
{{end}}